package com.appsdeveloperblog.photoapp.api.user.security;

import java.io.IOException;
import java.util.ArrayList;

import javax.naming.AuthenticationException;
import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.aop.ThrowsAdvice;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;

import com.appsdeveloperblog.photoapp.api.users.ui.model.LogginRequestModel;
import com.fasterxml.jackson.databind.ObjectMapper;

public class AuthenticationFilter extends UsernamePasswordAuthenticationFilter {

@Override
public Authentication attemptAuthentication(HttpServletRequest req,
HttpServletResponse res) {
	
	try {
		LogginRequestModel creds = new ObjectMapper()
				.readValue(req.getInputStream(), LogginRequestModel.class);
		return getAuthenticationManager().authenticate(
				new UsernamePasswordAuthenticationToken(creds.getEmail(),
						creds.getPassword(),
						new ArrayList<>()
						)
				);
		
	} catch (IOException e) {
		throw new RuntimeException();
		
	}
}

protected void successfulAuthentication(HttpServletRequest req,
		                              HttpServletResponse res
		                              ,FilterChain chin,
		                              Authentication auth) throws IOException,ServletException{
	
	
	
}

}
