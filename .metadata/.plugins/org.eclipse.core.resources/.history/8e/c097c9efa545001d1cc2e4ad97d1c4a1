package com.appsdeveloperblog.app.ws.ui.controller;

import org.apache.coyote.http11.Http11AprProtocol;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.appsdeveloperblog.app.ws.ui.model.request.UserDetailsRequestModel;
import com.appsdeveloperblog.app.ws.ui.model.response.UserRest;

@RestController
@RequestMapping("users")
public class UserController {
	
	
	
	
	@GetMapping
	public String getUsers(@RequestParam(value="page",defaultValue ="1") int page,
			@RequestParam(value="limit",defaultValue = "50") int limit )
	{
		return "get user was caller = "+page +"limit ="+limit;
	}
	
	@GetMapping(path="/{userId}",produces = {MediaType.APPLICATION_XML_VALUE,MediaType.APPLICATION_JSON_VALUE})
	public ResponseEntity<UserRest> getUser(@PathVariable String userId)
	{
		UserRest returnValue = new UserRest();
		returnValue.setEmail("test@gmsil.com");
		returnValue.setFirstName("sergay");
		returnValue.setLastName("korg");
		return new ResponseEntity<UserRest>(returnValue,HttpStatus.BAD_REQUEST);
	}
	@PostMapping(consumes = {MediaType.APPLICATION_JSON_VALUE,MediaType.APPLICATION_XML_VALUE})
	public ResponseEntity<UserRest> CreateUser(@valid @RequestBody UserDetailsRequestModel userDetails) {
		UserRest returnValue = new UserRest();
		returnValue.setEmail(userDetails.getEmail());
		returnValue.setFirstName(userDetails.getFirstName());
		returnValue.setLastName(userDetails.getLastName());
		return new ResponseEntity<UserRest>(returnValue,HttpStatus.BAD_REQUEST);
	}
	@PutMapping
	public String updateuser() {
		return "update user was called";
	}
	@DeleteMapping
	public String deleteUser() {
		return "delete user was called";
	}
	
	
}
